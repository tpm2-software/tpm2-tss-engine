name: Linux Build Status
on:
  [push, pull_request]
jobs:
  build-test:
    runs-on: ubuntu-latest
    if: "!contains(github.ref, 'coverity_scan')"
    strategy:
      matrix:
        DOCKER_IMAGE: [ "ubuntu-18.04", "ubuntu-20.04", "fedora-32", "opensuse-leap" ]
        TPM2TSS_BRANCH: ["3.0.x"]
        TPM2TOOLS_BRANCH: ["4.0"]
        CC: ["gcc", "clang"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Launch Container
        env:
          DOCKER_IMAGE: "${{ matrix.DOCKER_IMAGE }}"
          TPM2TSS_BRANCH: "${{ matrix.TPM2TSS_BRANCH }}"
          TPM2TOOLS_BRANCH: "${{ matrix.TPM2TOOLS_BRANCH }}"
          CC: "${{ matrix.CC }}"
        run: ./.ci/ci.sh
      - name: failure
        if: ${{ failure() }}
        run: cat build/test-suite.log || true
  multi-arch:
    runs-on: ubuntu-latest
    if: "!contains(github.ref, 'coverity_scan')"
    strategy:
      matrix:
        ARCH: [
          "ubuntu-20.04.arm32v7",
        ]
        TPM2TSS_BRANCH: ["3.0.x"]
        TPM2TOOLS_BRANCH: ["4.0"]
    steps:
      - name: Setup QEMU
        run: |
          sudo apt-get update
          sudo apt-get install qemu binfmt-support qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Launch Container
        env:
          DOCKER_IMAGE: ${{ matrix.ARCH }}
          TPM2TSS_BRANCH: "${{ matrix.TPM2TSS_BRANCH }}"
          TPM2TOOLS_BRANCH: "${{ matrix.TPM2TOOLS_BRANCH }}"
          CC: gcc
        run: ./.ci/ci.sh
      - name: failure
        if: ${{ failure() }}
        run: find -name test-suite.log | xargs cat || true
  coverity-test:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'coverity_scan') && github.event_name == 'push'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Launch Container
        env:
          ENABLE_COVERITY: true
          TPM2TSS_BRANCH: "3.0.x"
          TPM2TOOLS_BRANCH: "4.0"
          REPO_BRANCH: ${{ github.ref }}
          REPO_NAME: ${{ github.repository }}
          DOCKER_IMAGE: ubuntu-18.04
          CC: gcc
          COVERITY_SCAN_TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
          COVERITY_SUBMISSION_EMAIL: william.c.roberts@intel.com
        run: ./.ci/ci.sh
  whitespace-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && !contains(github.ref, 'coverity_scan')
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Perform Whitespace Check
        env:
          BASE_REF: ${{ github.base_ref }}
        run: git fetch origin "$BASE_REF" && git diff --check "origin/$BASE_REF"
